# # Make Multiplication table 
# # Make a counter
# i = 1
# # Make a loop in range(1,11)
# for num in range(1, 11):
# # Make a loop to multiplicate the num and the counter
#     while i < 11:
#         print(f"{num} X {i} = {num * i}")
#         i += 1
#     i = 1
#     print("-" * 20)
# # 


###################################

words = ['have', 'that', 'they', 'with', 'this', 'from', 
'which', 'would', 'will', 'there', 'make', 'when', 'more', 
'other', 'what', 'time', 'about', 'than', 'into', 'could', 
'state', 'only', 'year', 'some', 'take', 'come', 'these', 
'know', 'like', 'then', 'first', 'work', 'such', 'give', 
'over', 'think', 'most', 'even', 'find', 'also', 'after', 
'many', 'must', 'look',  
'before', 'great', 'back', 'through', 'long', 'where', 'much', 
'should', 'well', 'people', 'gouda', 'just', 'because', 'good', 
'each', 'those', 'feel', 'seem', 'high', 'place', 'little', 
'world', 'very', 'still', 'nation', 'hand', 'life', 'tell', 
'write', 'become', 'here', 'show', 'house', 'both', 'between', 
'need', 'mean', 'call', 'develop', 'under', 'last', 'right', 
'move', 'thing', 'general', 'school', 'never', 'same', 
'another', 'begin', 'while', 'number', 'part', 'turn', 'real', 
'leave', 'might', 'want', 'point', 'form', 'child', 'small', 
'since', 'against', 'late', 'home', 'interest', 'large', 
'person', 'open', 'public', 'follow', 'during', 'present', 
'without', 'again', 'hold', 'codezilla', 'govern', 'around', 
'head', 'consider', 'word', 'program', 'problem', 'however', 
'lead', 'system', 'order', 'plan', 'keep', 'face', 'group', 
'play', 'stand', 'increase', 'early', 'course', 'change', 
'help', 'line', 'possible', 'fact', 'down']

# Make a variable to save the new list
# upper_words = []
# # make a loop 
# for word in words:
#     upper_words.append(word.upper())
# print(upper_words)
##########
# for i in range(len(words)): 
# # convert the current word to uppercase 
#     words[i] = words[i].upper() 
# # print the modified list of words 
# print(words) 


##################################




# words = [["Hello", "from", "Codezilla"],  
#     ["Python", "Course", "is", "awesome"],  
#     ["I", "enjoy", "learning", "Python", "with", "Codezilla"]]
# sentences = []    
# for lst in words:
#     for word in lst:
#         sentences.append(word)
# sentences = " ".join(sentences)
# print(sentences)
# #############
# sentences = []
# for lst in words:
#     for word in lst:
#         sentences.append(word.upper())
# sentences = "-".join(sentences)        
# print(sentences)

# make a list of sentences 
# sentences = [] 
# for lst in words: 
#     # convert each inner list to a string and join them with a space 
#     sentences.append(" ".join(lst)) 
 
# # make another list named modified_sentences 
# modified_sentences = [] 
 
# # Loop through the list of sentences 
# for i in range(len(sentences)): 
#     # Replace Spaces with dashes and convert to uppercase 
#     modified_sentences.append(sentences[i].replace(" ", "-").upper()) 

 
 
# # Print the sentences and modified_sentences 
# print(f"The list of sentences is: {sentences}") 
# print(f"The modified list of sentences is:{modified_sentences}") 
 

#################################

# numbers = [-588, -479, -713, -701, -885, -578, -835, -466, -
# 935, -665, -360, -837, -389, -367, -454, -668, -907, -822, -
# 541, -680, -405, -330, -625, -916, -331, -876, -689, -753, -
# 810, -648, -787, -952, -718, -401, -502, -699, -533, -450, -
# 580, -725]

# # Make a variable to save the smallest num
# smallest_num = numbers[0]
# for num in numbers:
#     if num < smallest_num:
#         smallest_num = num
# print(smallest_num)   

#####################################


# numbers = [-500, -694, -762, -445, -348, -361, -758, -594, -
# 954, -861, -610, -549, -336, -400, -600, -836, -671, -573, -
# 555, -390, -450, -811, -849, -870, -815, -694, -951, -588, -
# 484, -609, -674, -411, -408, -498, -649, -541, -441, -839, -
# 567, -898] 

# odd_nums = []
# # Make a list of odd numbers
# for num in numbers:
#     if num % 2 != 0:
#         odd_nums.append(num)

# smallest_odd_num = odd_nums[0]
# for i in odd_nums:
#     if i < smallest_odd_num:
#         smallest_odd_num = i 

# print(smallest_odd_num)        

#######################################

# sentence = """Python is a widely used high-level  
# general-purpose interpreted dynamic programming language 
# Its design philosophy emphasizes code readability and its 
# syntax allows programmers to express concepts in fewer lines of 
# code  
# than possible in many other languages 
# The language provides constructs intended to enable clear 
# programs on both a small and large scale 
# """ 
# # store the sentence in lst
# lst_words = sentence.split()
# num_words = len(lst_words)
# num_letters = len(sentence)
# avr = num_letters / num_words
# print(round(avr,0))


# ###############

# words_list = sentence.split() 
 
# # initialize the total length 
# total_length = 0 
 
# # loop through the list of words 
# for word in words_list: 
#     # increment the total length 
#     total_length += len(word) 
 
# # calculate the average word length 
# average_length = total_length / len(words_list) 
# print(total_length)
# # print the average word length 
# print(f"The average word length is {average_length:.2f} characters.") 


####################################################   
    
# nested_list = [["Hello", "from", "Codezilla"],  
#      ["Python", "Course", "is", "awesome"],  
#      ["I", "enjoy", "learning", "Python"]] 
# # found = False
# # for lst in nested_list:
# #     print(lst)
# #     for word in lst:
# #         print(word)
# #         if word == "Codezilla":
# #             found = True
# # if found:
# #     print("Found Codezilla")

# ############
# for lst in nested_list: 
#     print(lst) 
#     for word in lst: 
#         print(word)  
#         if word == "I": 
#             print("Found I!")
#             exit()






https://www.programiz.com/online-compiler/1K0ovR6d01eqd